/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_fr_bepo.h"


/ {
    macros {
      ctrl_alt: ctrl_alt {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings
          = <&kp LCTRL &kp LALT>;
      };
    };
 
    conditional-layers {
      compatible = "zmk,conditional-layers";
      tri_layer {
        if-layers = <1 2>;
        then-layer = <3>;
      };
    };

    keymap {
      compatible = "zmk,keymap";

      default_layer {
// ╭──────┬─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────┬─────╮
// │  TAB │  B  │  É  │  P  │  O  │  È  │   │^ ESC│ V W │  D  │  L  │  J  │  Z  │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ SHFT │  A  │  U  │  I  │  E  │  ,  │   │  C  │  T  │  S  │  R  │  N  │  M  │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTRL │  À  │  Y  │  X  │  .  │  K  │   │  '  │  Q  │  G  │  H  │  F  │  Ç  │
// ╰──────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────╯
//                    │ GUI │ LWR │ SPC │   │ ENT │ RSE │ ALT │
//                    ╰─────┴─────┴─────╯   ╰─────┴─────┴─────╯
         bindings = <
   &kp TAB   &kp BP_B       &kp BP_E_ACUTE &kp BP_P &kp BP_O     &kp BP_E_GRAVE     &mt BP_CARET ESC &mt BP_W BP_V &kp BP_D &kp BP_L &kp BP_J &kp BP_Z
   &kp LSHFT &kp BP_A       &kp BP_U       &kp BP_I &kp BP_E     &kp BP_COMMA       &kp BP_C         &kp BP_T      &kp BP_S &kp BP_R &kp BP_N &kp BP_M
   &kp LCTRL &kp BP_A_GRAVE &kp BP_Y       &kp BP_X &kp BP_DOT   &kp BP_K           &kp BP_RSQ       &kp BP_Q      &kp BP_G &kp BP_H &kp BP_F &kp BP_C_CEDILLA
                                           &kp LGUI &mo 1        &kp BP_SPACE       &kp RET          &mo 2         &kp RALT
         >;
      };

      lower_layer {
// ╭──────┬─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────┬─────╮
// │  #   │  1  │  2  │  3  │  4  │  5  │   │  6  │  7  │  8  │  9  │  0  │  °  │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ SHFT │     │     │     │     │ BKSP│   │ DEL │LEFT │DOWN │ UP  │ RGT │  `  │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTRL │     │     │     │     │     │   │     │     │ PDN │ PUP │     │     │
// ╰──────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────╯
//                    │ GUI │     │ SPC │   │ ENT │     │ ALT │
//                    ╰─────┴─────┴─────╯   ╰─────┴─────┴─────╯
        bindings = <
   &kp TAB   &kp BP_N1 &kp BP_N2 &kp BP_N3 &kp BP_N4  &kp BP_N5        &kp BP_N6 &kp BP_N7 &kp BP_N8 &kp BP_N9 &kp BP_N0 &kp BP_DEG
   &kp LSHFT &trans    &trans    &trans    &trans     &kp BSPC         &kp DEL   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp BP_GRAVE
   &kp LCTRL &trans    &trans    &trans    &trans     &trans           &trans    &trans    &kp PG_DN &kp PG_UP &trans
                                 &kp LGUI  &trans     &kp BP_SPACE     &kp RET   &trans    &kp RALT
        >;
      };

      raise_layer {
// ╭──────┬─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────┬─────╮
// │  $   │  "  │  «  │  »  │  (  │  )  │   │  @  │  +  │  -  │  /  │  *  │  =  │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ SHFT │  &  │  <  │  >  │  [  │  ]  │   │ DEL │     │     │     │     │  %  │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTRL │  |  │  \  │  /  │  {  │  }  │   │     │     │     │     │     │     │
// ╰──────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────╯
//                    │LGUI │     │ SPC │   │ ENT │     │ ALT │
//                    ╰─────┴─────┴─────╯   ╰─────┴─────┴─────╯
        bindings = <
   &kp BP_DLLR &kp BP_DQT  &kp BP_LAQUO &kp BP_RAQUO &kp BP_LPAR &kp BP_RPAR    &kp BP_AT &kp BP_PLUS &kp BP_MINUS &kp BP_FSLH &kp BP_STAR &kp BP_EQUAL
   &kp LSHFT   &kp BP_AMPS &kp BP_LT    &kp BP_GT    &kp BP_LBKT &kp BP_RBKT    &kp DEL   &trans      &trans       &trans      &trans      &kp BP_PRCNT
   &kp LCTRL   &kp BP_PIPE &kp BP_BSLH  &kp BP_FSLH  &kp BP_LBRC &kp BP_RBRC    &trans    &trans      &trans       &trans      &trans      &trans
                                        &kp LGUI     &trans      &kp SPACE      &kp RET   &trans      &kp RALT
        >;
      };

      functional_layer {
// ╭──────┬─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────┬─────╮
// │  F1  │  F2 │  F3 │  F4 │ F5  │  F6 │   │  F7 │  F8 │  F9 │ F10 │ F11 │ F12 │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ SHFT │v up │prev │pause│next │ BKSP│   │ DEL │LEFT │DOWN │ UP  │ RGT │     │
// ├──────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ CTRL │v dn │mute │     │     │     │   │     │     │ PDN │ PUP │     │CALT │
// ╰──────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────╯
//                    │LGUI │     │ SPC │   │ ENT │     │ ALT │
//                    ╰─────┴─────┴─────╯   ╰─────┴─────┴─────╯
        bindings = <
   &kp BP_DLLR &kp BP_DQT   &kp BP_LAQUO &kp BP_RAQUO &kp BP_LPAR &kp BP_RPAR     &kp BP_AT &kp BP_PLUS &kp BP_MINUS &kp BP_FSLH &kp BP_STAR &kp BP_EQUAL
   &kp LSHFT   &kp C_VOL_UP &kp C_PREV   &kp C_PP     &kp C_NEXT  &kp BSPC        &kp DEL   &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT   &trans
   &kp LCTRL   &kp C_VOL_DN &kp C_MUTE   &trans       &trans      &trans          &trans    &trans      &kp PG_DN    &kp PG_UP   &trans      &ctrl_alt
                                         &kp LGUI     &trans      &kp SPACE       &kp RET   &trans      &kp RALT
        >;
    };
  };
};
